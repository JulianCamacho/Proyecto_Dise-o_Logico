$date
	Sat Nov 13 23:57:58 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 3 ! ready [2:0] $end
$var wire 17 " producto [16:0] $end
$var reg 1 # clk $end
$var reg 8 $ multiplicador [7:0] $end
$var reg 8 % multiplicando [7:0] $end
$var reg 1 & rst $end
$var integer 32 ' flag [31:0] $end
$var integer 32 ( flag1 [31:0] $end
$scope module Estados $end
$var wire 8 ) DP_B [7:0] $end
$var wire 8 * DP_Q [7:0] $end
$var wire 1 # clk $end
$var wire 1 & rst $end
$var wire 1 + zero $end
$var wire 3 , ready [2:0] $end
$var wire 3 - cuenta [2:0] $end
$var wire 1 . SHIFT $end
$var wire 1 / READY $end
$var wire 1 0 Q0 $end
$var wire 17 1 Producto [16:0] $end
$var wire 1 2 LOAD $end
$var wire 1 3 DECR $end
$var wire 1 4 ADD $end
$scope module DUT $end
$var wire 8 5 DP_B [7:0] $end
$var wire 8 6 DP_Q [7:0] $end
$var wire 1 # clk $end
$var wire 1 & rst $end
$var wire 1 7 salidaSerieQ $end
$var wire 1 8 salidaSerieC $end
$var wire 1 9 salidaSerieA $end
$var wire 8 : salidaRegB [7:0] $end
$var wire 8 ; salidaParalelaQ [7:0] $end
$var wire 1 < salidaParalelaC $end
$var wire 8 = salidaParalelaA [7:0] $end
$var wire 8 > resultadoSum [7:0] $end
$var wire 3 ? cuenta [2:0] $end
$var wire 1 @ cout $end
$var wire 1 . Shift_Regs $end
$var wire 1 2 Load_Regs $end
$var wire 1 3 Decr_P $end
$var wire 1 4 Add_Regs $end
$var reg 1 A EN_A $end
$var reg 1 B EN_C $end
$var reg 1 C EN_Q $end
$var reg 1 D LS_A $end
$var reg 1 E LS_Q $end
$var reg 3 F P [2:0] $end
$var reg 17 G Producto [16:0] $end
$var reg 1 0 Q0 $end
$var reg 1 + Zero $end
$scope module RegisterA $end
$var wire 1 A EN $end
$var wire 1 D LS $end
$var wire 1 # clk $end
$var wire 1 & rst $end
$var wire 8 H DP [7:0] $end
$var wire 1 8 D $end
$var reg 8 I next_state [7:0] $end
$var reg 8 J outParalela [7:0] $end
$var reg 1 9 outSerie $end
$var reg 8 K state [7:0] $end
$upscope $end
$scope module RegisterB $end
$var wire 8 L DP [7:0] $end
$var wire 1 # clk $end
$var wire 1 & rst $end
$var wire 1 2 EN $end
$var reg 8 M next_state [7:0] $end
$var reg 8 N out [7:0] $end
$var reg 8 O state [7:0] $end
$upscope $end
$scope module RegisterC $end
$var wire 1 P D $end
$var wire 1 B EN $end
$var wire 1 # clk $end
$var wire 1 & rst $end
$var wire 1 . LS $end
$var wire 1 @ DP $end
$var reg 1 Q next_state $end
$var reg 1 < outParalela $end
$var reg 1 8 outSerie $end
$var reg 1 R state $end
$upscope $end
$scope module RegisterP $end
$var wire 1 # clk $end
$var wire 1 & rst $end
$var wire 1 3 EN $end
$var reg 3 S cuenta [2:0] $end
$var reg 3 T next_state [2:0] $end
$var reg 3 U state [2:0] $end
$upscope $end
$scope module RegisterQ $end
$var wire 1 9 D $end
$var wire 8 V DP [7:0] $end
$var wire 1 C EN $end
$var wire 1 E LS $end
$var wire 1 # clk $end
$var wire 1 & rst $end
$var reg 8 W next_state [7:0] $end
$var reg 8 X outParalela [7:0] $end
$var reg 1 7 outSerie $end
$var reg 8 Y state [7:0] $end
$upscope $end
$scope module sum $end
$var wire 8 Z A [7:0] $end
$var wire 8 [ B [7:0] $end
$var wire 1 8 Cin $end
$var reg 1 @ Cout $end
$var reg 8 \ S [7:0] $end
$upscope $end
$upscope $end
$scope module dux $end
$var wire 1 # clk $end
$var wire 1 0 pulso $end
$var wire 1 & rst $end
$var wire 1 + zero $end
$var reg 1 4 Add_regs $end
$var reg 1 3 Decre_P $end
$var reg 1 2 Load_regs $end
$var reg 1 . Shift_regs $end
$var reg 1 ] flag $end
$var reg 3 ^ next_state [2:0] $end
$var reg 1 / ready $end
$var reg 3 _ salida [2:0] $end
$var reg 3 ` state [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx `
bx _
bx ^
x]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
xR
xQ
0P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
xE
xD
xC
xB
xA
x@
bx ?
bx >
bx =
x<
bx ;
bx :
x9
x8
x7
bx 6
bx 5
x4
x3
x2
bx 1
x0
x/
x.
bx -
bx ,
x+
bx *
bx )
b0 (
b0 '
0&
bx %
bx $
0#
bx "
bx !
$end
#5000
0B
0A
1D
0E
0C
0/
03
0.
04
12
0@
b0 >
b0 H
b0 \
0+
b111 -
b111 F
00
b0 "
b0 1
b0 G
b100 !
b100 ,
b100 _
b0 ^
b0 :
b0 N
b0 [
b10111 M
0<
08
0Q
b0 =
b0 J
b0 Z
09
b0 I
b0 ;
b0 X
07
b0 W
b111 ?
b111 S
b111 T
b100 `
b0 O
0R
b0 K
b0 Y
b111 U
1&
b10001 %
b10001 *
b10001 6
b10001 V
b10111 $
b10111 )
b10111 5
b10111 L
1#
#10000
0#
#15000
1E
02
b10111 >
b10111 H
b10111 \
b10111 :
b10111 N
b10111 [
b0 !
b0 ,
b0 _
b111 ^
b10111 O
b0 `
b1 (
b1 '
1#
#20000
0#
#25000
1C
1A
1B
1.
b111 !
b111 ,
b111 _
b1 ^
b111 `
1#
#30000
0#
#35000
b110 T
0C
0A
0B
13
0.
b1 !
b1 ,
b1 _
b11 ^
b1 `
1#
#40000
0#
#45000
1C
1A
1B
1.
03
b110 -
b110 F
b11 !
b11 ,
b11 _
b1 ^
b110 ?
b110 S
b110 T
b11 `
b110 U
1#
#50000
0#
#55000
b101 T
0C
0A
0B
13
0.
b1 !
b1 ,
b1 _
b11 ^
b1 `
1#
#60000
0#
#65000
1C
1A
1B
1.
03
b101 -
b101 F
b11 !
b11 ,
b11 _
b1 ^
b101 ?
b101 S
b101 T
b11 `
b101 U
1#
#70000
0#
#75000
b100 T
0C
0A
0B
13
0.
b1 !
b1 ,
b1 _
b11 ^
b1 `
1#
#80000
0#
#85000
1C
1A
1B
1.
03
b100 -
b100 F
b11 !
b11 ,
b11 _
b1 ^
b100 ?
b100 S
b100 T
b11 `
b100 U
1#
#90000
0#
#95000
b11 T
0C
0A
0B
13
0.
b1 !
b1 ,
b1 _
b11 ^
b1 `
1#
#100000
0#
#105000
1C
1A
1B
1.
03
b11 -
b11 F
b11 !
b11 ,
b11 _
b1 ^
b11 ?
b11 S
b11 T
b11 `
b11 U
1#
#110000
0#
#115000
b10 T
0C
0A
0B
13
0.
b1 !
b1 ,
b1 _
b11 ^
b1 `
1#
#120000
0#
#125000
1C
1A
1B
1.
03
b10 -
b10 F
b11 !
b11 ,
b11 _
b1 ^
b10 ?
b10 S
b10 T
b11 `
b10 U
1#
#130000
0#
#135000
b1 T
0C
0A
0B
13
0.
b1 !
b1 ,
b1 _
b11 ^
b1 `
1#
#140000
0#
#145000
1C
1A
1B
1.
03
b1 -
b1 F
b11 !
b11 ,
b11 _
b1 ^
b1 ?
b1 S
b1 T
b11 `
b1 U
1#
#150000
0#
#155000
b0 T
0C
0A
0B
13
0.
b1 !
b1 ,
b1 _
b11 ^
b1 `
1#
#160000
0#
#165000
1/
0.
03
1+
b0 -
b0 F
b11 !
b11 ,
b11 _
b100 ^
b0 ?
b0 S
b0 T
b11 `
b0 U
1#
#170000
0#
#175000
b10001 W
0E
1C
12
0/
b100 !
b100 ,
b100 _
b0 ^
b100 `
1#
#180000
0#
#185000
0C
1E
02
10
b10001 "
b10001 1
b10001 G
b0 !
b0 ,
b0 _
b111 ^
b10001 ;
b10001 X
17
b0 `
b10001 Y
b10 (
b10 '
1#
#190000
0#
#195000
b10111 I
0D
1A
14
b111 !
b111 ,
b111 _
b10 ^
b111 `
1#
#200000
0#
#205000
b10001000 W
1C
1B
1A
1D
1.
04
b1011 I
b101110 >
b101110 H
b101110 \
b1011100010001 "
b1011100010001 1
b1011100010001 G
b10 !
b10 ,
b10 _
b1 ^
b10111 =
b10111 J
b10111 Z
19
b10 `
b10111 K
1#
#210000
0#
#215000
b111 T
0C
0A
0B
13
0.
b100010 >
b100010 H
b100010 \
00
b101110001000 "
b101110001000 1
b101110001000 G
b10001000 ;
b10001000 X
07
b10001000 W
b1011 =
b1011 J
b1011 Z
b1011 I
b1 !
b1 ,
b1 _
b11 ^
b10001000 Y
b1011 K
b1 `
1#
#220000
0#
#225000
b11000100 W
b101 I
1C
1A
1B
1.
0/
03
0+
b111 -
b111 F
b11 !
b11 ,
b11 _
b1 ^
b111 ?
b111 S
b111 T
b11 `
b111 U
1#
#230000
0#
#235000
b110 T
0C
0A
0B
13
0.
b11100 >
b11100 H
b11100 \
b10111000100 "
b10111000100 1
b10111000100 G
b11000100 ;
b11000100 X
b11000100 W
b101 =
b101 J
b101 Z
b101 I
b1 !
b1 ,
b1 _
b11 ^
b11000100 Y
b101 K
b1 `
1#
#240000
0#
#245000
b11100010 W
b10 I
1C
1A
1B
1.
03
b110 -
b110 F
b11 !
b11 ,
b11 _
b1 ^
b110 ?
b110 S
b110 T
b11 `
b110 U
1#
#250000
0#
#255000
b101 T
0C
0A
0B
13
0.
b11001 >
b11001 H
b11001 \
b1011100010 "
b1011100010 1
b1011100010 G
b11100010 ;
b11100010 X
b11100010 W
b10 =
b10 J
b10 Z
09
b10 I
b1 !
b1 ,
b1 _
b11 ^
b11100010 Y
b10 K
b1 `
1#
#260000
0#
#265000
b1110001 W
b1 I
1C
1A
1B
1.
03
b101 -
b101 F
b11 !
b11 ,
b11 _
b1 ^
b101 ?
b101 S
b101 T
b11 `
b101 U
1#
#270000
0#
#275000
b100 T
0C
0A
0B
13
0.
b11000 >
b11000 H
b11000 \
10
b101110001 "
b101110001 1
b101110001 G
b1110001 ;
b1110001 X
17
b1110001 W
b1 =
b1 J
b1 Z
19
b1 I
b1 !
b1 ,
b1 _
b11 ^
b1110001 Y
b1 K
b1 `
1#
#280000
0#
#285000
b11000 I
0D
1A
14
03
b100 -
b100 F
b11 !
b11 ,
b11 _
b10 ^
b100 ?
b100 S
b100 T
b11 `
b100 U
1#
#290000
0#
#295000
b111000 W
1C
1B
1A
1D
1.
04
b1100 I
b101111 >
b101111 H
b101111 \
b1100001110001 "
b1100001110001 1
b1100001110001 G
b11000 =
b11000 J
b11000 Z
09
b10 !
b10 ,
b10 _
b1 ^
b11000 K
b10 `
1#
#300000
0#
#305000
b11 T
0C
0A
0B
13
0.
b100011 >
b100011 H
b100011 \
00
b110000111000 "
b110000111000 1
b110000111000 G
b1 !
b1 ,
b1 _
b11 ^
b1100 =
b1100 J
b1100 Z
b1100 I
b111000 ;
b111000 X
07
b111000 W
b1 `
b1100 K
b111000 Y
1#
#310000
0#
#315000
b11100 W
b110 I
1C
1A
1B
1.
03
b11 -
b11 F
b11 ?
b11 S
b11 T
b11 !
b11 ,
b11 _
b1 ^
b11 U
b11 `
1#
#320000
0#
#325000
b10 T
0C
0A
0B
13
0.
b11101 >
b11101 H
b11101 \
b11000011100 "
b11000011100 1
b11000011100 G
b1 !
b1 ,
b1 _
b11 ^
b110 =
b110 J
b110 Z
b110 I
b11100 ;
b11100 X
b11100 W
b1 `
b110 K
b11100 Y
1#
#330000
0#
#335000
b1110 W
b11 I
1C
1A
1B
1.
03
b10 -
b10 F
b10 ?
b10 S
b10 T
b11 !
b11 ,
b11 _
b1 ^
b10 U
b11 `
1#
#340000
0#
#345000
b1 T
0C
0A
0B
13
0.
b11010 >
b11010 H
b11010 \
b1100001110 "
b1100001110 1
b1100001110 G
b1 !
b1 ,
b1 _
b11 ^
b11 =
b11 J
b11 Z
19
b11 I
b1110 ;
b1110 X
b1110 W
b1 `
b11 K
b1110 Y
1#
#350000
0#
#355000
b10000111 W
b1 I
1C
1A
1B
1.
03
b1 -
b1 F
b1 ?
b1 S
b1 T
b11 !
b11 ,
b11 _
b1 ^
b1 U
b11 `
1#
#360000
0#
#365000
b0 T
0C
0A
0B
13
0.
b11000 >
b11000 H
b11000 \
10
b110000111 "
b110000111 1
b110000111 G
b1 !
b1 ,
b1 _
b11 ^
b1 =
b1 J
b1 Z
b1 I
b10000111 ;
b10000111 X
17
b10000111 W
b1 `
b1 K
b10000111 Y
1#
#370000
0#
#375000
1/
04
03
1+
b0 -
b0 F
b0 ?
b0 S
b0 T
b11 !
b11 ,
b11 _
b100 ^
b0 U
b11 `
1#
#380000
0#
#385000
b10001 W
0E
1C
12
0/
b100 !
b100 ,
b100 _
b0 ^
b100 `
1#
#390000
0#
#395000
0C
1E
02
b100010001 "
b100010001 1
b100010001 G
b10001 ;
b10001 X
b0 !
b0 ,
b0 _
b111 ^
b10001 Y
b0 `
b11 (
b11 '
1#
